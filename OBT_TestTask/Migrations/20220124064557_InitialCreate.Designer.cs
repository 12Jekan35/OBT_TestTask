// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OBT_TestTask.Services;

namespace OBT_TestTask.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20220124064557_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("OBT_TestTask.Models.BudgetAccount", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ChangeDownDebtID")
                        .HasColumnType("integer")
                        .HasColumnName("ChangeDownDebtID");

                    b.Property<int>("ChangeUpDebtID")
                        .HasColumnType("integer")
                        .HasColumnName("ChangeUpDebtID");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("Code");

                    b.Property<int>("EndReportPeriodDebtID")
                        .HasColumnType("integer")
                        .HasColumnName("EndReportPeriodDebtID");

                    b.Property<int>("EndSamePastPeriodID")
                        .HasColumnType("integer")
                        .HasColumnName("EndSamePastPeriodID");

                    b.Property<int>("FormNumber")
                        .HasColumnType("integer")
                        .HasColumnName("FormNumber");

                    b.Property<string>("KOSGU")
                        .HasColumnType("text")
                        .HasColumnName("KOSGU");

                    b.Property<string>("SintAccount")
                        .HasColumnType("text")
                        .HasColumnName("SintAccount");

                    b.Property<int>("StartYearDebtID")
                        .HasColumnType("integer")
                        .HasColumnName("StartYearDebtID");

                    b.HasKey("ID");

                    b.HasIndex("ChangeDownDebtID");

                    b.HasIndex("ChangeUpDebtID");

                    b.HasIndex("EndReportPeriodDebtID");

                    b.HasIndex("EndSamePastPeriodID");

                    b.HasIndex("StartYearDebtID");

                    b.ToTable("BudgetAccounts", "public");
                });

            modelBuilder.Entity("OBT_TestTask.Models.ChangeDebt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("AllSum")
                        .HasColumnType("numeric")
                        .HasColumnName("AllSum");

                    b.Property<decimal>("NonmonetaryPart")
                        .HasColumnType("numeric")
                        .HasColumnName("NonmonetaryPart");

                    b.HasKey("ID");

                    b.ToTable("ChangesDebt", "public");
                });

            modelBuilder.Entity("OBT_TestTask.Models.Debt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("AllSum")
                        .HasColumnType("numeric")
                        .HasColumnName("AllSum");

                    b.Property<decimal>("LongTerm")
                        .HasColumnType("numeric")
                        .HasColumnName("LongTerm");

                    b.Property<decimal>("Overdue")
                        .HasColumnType("numeric")
                        .HasColumnName("Overdue");

                    b.HasKey("ID");

                    b.ToTable("Debts", "public");
                });

            modelBuilder.Entity("OBT_TestTask.Models.BudgetAccount", b =>
                {
                    b.HasOne("OBT_TestTask.Models.ChangeDebt", "ChangeDownDebt")
                        .WithMany()
                        .HasForeignKey("ChangeDownDebtID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBT_TestTask.Models.ChangeDebt", "ChangeUpDebt")
                        .WithMany()
                        .HasForeignKey("ChangeUpDebtID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBT_TestTask.Models.Debt", "EndReportPeriodDebt")
                        .WithMany()
                        .HasForeignKey("EndReportPeriodDebtID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBT_TestTask.Models.Debt", "EndSamePastPeriod")
                        .WithMany()
                        .HasForeignKey("EndSamePastPeriodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBT_TestTask.Models.Debt", "StartYearDebt")
                        .WithMany()
                        .HasForeignKey("StartYearDebtID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChangeDownDebt");

                    b.Navigation("ChangeUpDebt");

                    b.Navigation("EndReportPeriodDebt");

                    b.Navigation("EndSamePastPeriod");

                    b.Navigation("StartYearDebt");
                });
#pragma warning restore 612, 618
        }
    }
}
